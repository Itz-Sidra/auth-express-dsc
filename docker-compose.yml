version: "3.8"

services:
  auth-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: auth-backend
    ports:
      - "4000:4000"
    volumes:
      - .:/app # Mount local files to the container
      - /app/node_modules
    command: sh -c "npx prisma migrate deploy && npm run dev"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      prom-server:
        condition: service_started
    environment:
      - DATABASE_URL=postgresql://psql:mySecretKey@db:5432/postgres
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=supersecretkey
      - REFRESH_TOKEN_SECRET=refreshsecretkey
      - ACCESS_TOKEN_EXPIRES=15m
      - REFRESH_TOKEN_EXPIRES=7d
      - PORT=4000
      - CHOKIDAR_USEPOLLING=true

  db:
    image: postgres:15
    container_name: postgres-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: psql
      POSTGRES_PASSWORD: mySecretKey
      POSTGRES_DB: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U psql -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: redis-cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prom-server
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin

  prom-server:
    image: prom/prometheus
    container_name: prom-server
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

volumes:
  db_data:
  redis_data:
  grafana_data:
